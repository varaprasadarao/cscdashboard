<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" creationComplete="init()">
	
	
	
	
	
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.charts.LegendItem;
			import mx.charts.events.ChartEvent;
			import mx.charts.events.ChartItemEvent;
			import mx.charts.series.ColumnSeries;
			import mx.charts.series.LineSeries;
			import mx.collections.ArrayCollection;
			import mx.containers.GridItem;
			import mx.containers.GridRow;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.graphics.SolidColor;
			
			import org.as3commons.collections.Map;
			[Bindable]
			public var compField:String;
			
			[Bindable]
			public var _compac:ArrayCollection;
			

			
			[Bindable]
			var final1:ArrayCollection = new ArrayCollection();
			
			private function init():void{
				//columnComp.addEventListener(,columnComp_creationCompleteHandler);
			}
			
			public function build(month:Number, year:Number, monthDur:Number):void {

				var t:Map = new Map();
				var team:ArrayCollection = new ArrayCollection();
				for(var i:int=0;i<_compac.length;i++)
				{
					var teamStr:String = _compac.getItemAt(i)['team'];
					var monthStr:String = _compac.getItemAt(i)['month'];
					var keyStr:String = teamStr+"$"+monthStr;
					if(!team.contains(teamStr)){
						team.addItem(teamStr);
					}
					t.add(keyStr,_compac.getItemAt(i));
				}
				
				
				//var compLen:Number = monthDurCB.selectedItem['data'] as Number; 
				var startDate:Number = month + year*12 - monthDur + 1;
				
				//	month.
				
				final1.removeAll();
				for(var ii:int = 0;ii<monthDur;ii++){
					var mon:String = Util.getFormatedMonth(startDate++);
					var ob:Object = new Object();
					ob["month"] = mon;
					for(var jj:int = 0;jj<team.length;jj++){
						var te:String = team.getItemAt(jj) as String;
						if(t.hasKey(te+"$"+mon)){
							//	var obj:String = t.itemFor(te+"$"+mon)['billingEfficiency'];
							ob[te] = t.itemFor(te+"$"+mon)[compField];
						}else{
							ob[te] = 0;
						}
					}
					final1.addItem(ob);
				}
				var tmp1:ColumnSeries = new ColumnSeries();
				columnComp.series = [tmp1]; 
				var teamLen:Number = team.length;
				var ty:int = 0;
				
				
				for(var tt:int=0;tt<teamLen;tt++){
					
					var tem:String = team.getItemAt(tt) as String;
					if(tem!=null && tem.indexOf("Overall")>-1){
						var tmp2:LineSeries = new LineSeries();
						
						tmp2.yField=tem;
						tmp2.xField="month";
						tmp2.displayName=tem;
						
						columnComp.series[teamLen-1]=tmp2;
					}else{
						
						var tmp3:ColumnSeries = new ColumnSeries();
						tmp3.yField=tem;
						tmp3.xField="month";
						tmp3.displayName=tem;
						columnComp.series[ty++]=tmp3;
						
						
					}
				}
		
			}
			
			protected function columnComp_creationCompleteHandler(event:Event):void
			{
				Alert.show("I am init");
				for(var k:int = 0; k<columnComp.series.length;k++){
					var gr:GridRow = new GridRow();
					myGrid.addChild(gr);
					var gi:GridItem = new GridItem();
					gr.addChild(gi);
					var li:LegendItem = new LegendItem();
					li.label = columnComp.series[k].displayName;
					
					var sc:SolidColor = new SolidColor();
					sc.color = columnComp.series[k].items[0].fill.color;
					li.setStyle("fill",sc);
					gi.addChild(li);
				}
			}
			
		]]>
	</fx:Script>
	<mx:HBox width="100%" height="100%">
		

		<mx:ColumnChart id="columnComp" height="100%" color="0x323232" width="85%" 
						showDataTips="true" dataProvider="{final1}" >
			
			<mx:horizontalAxis>
				<mx:CategoryAxis id="horAxis1" categoryField="month" title="Months"/>
			</mx:horizontalAxis>
			
			<mx:series>
				
			</mx:series>
			
		</mx:ColumnChart>
		<mx:Grid id="myGrid" width="15%" top="30" paddingTop="30"/>
		<!--<mx:Legend dataProvider="{columnComp}" width="15%" top="30" paddingTop="30"/>-->
	</mx:HBox>
	
	
	
	
</mx:Canvas>
