// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.csc.dashboard.admin.model;

import com.csc.dashboard.admin.model.ContributionToTop10;
import java.lang.Integer;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ContributionToTop10_Roo_Entity {
    
    @PersistenceContext
    transient EntityManager ContributionToTop10.entityManager;
    
    @Transactional
    public void ContributionToTop10.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void ContributionToTop10.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            ContributionToTop10 attached = ContributionToTop10.findContributionToTop10(this.id);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void ContributionToTop10.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void ContributionToTop10.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public ContributionToTop10 ContributionToTop10.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        ContributionToTop10 merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager ContributionToTop10.entityManager() {
        EntityManager em = new ContributionToTop10().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long ContributionToTop10.countContributionToTop10s() {
        return entityManager().createQuery("SELECT COUNT(o) FROM ContributionToTop10 o", Long.class).getSingleResult();
    }
    
    public static List<ContributionToTop10> ContributionToTop10.findAllContributionToTop10s() {
        return entityManager().createQuery("SELECT o FROM ContributionToTop10 o", ContributionToTop10.class).getResultList();
    }
    
    public static ContributionToTop10 ContributionToTop10.findContributionToTop10(Integer id) {
        if (id == null) return null;
        return entityManager().find(ContributionToTop10.class, id);
    }
    
    public static List<ContributionToTop10> ContributionToTop10.findContributionToTop10Entries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM ContributionToTop10 o", ContributionToTop10.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
